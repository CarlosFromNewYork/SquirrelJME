// -*- Mode: Java; indent-tabs-mode: t; tab-width: 4 -*-
// ---------------------------------------------------------------------------
// Multi-Phasic Applications: SquirrelJME
//     Copyright (C) Steven Gawroriski <steven@multiphasicapps.net>
//     Copyright (C) Multi-Phasic Applications <multiphasicapps.net>
// ---------------------------------------------------------------------------
// SquirrelJME is under the GNU General Public License v3+, or later.
// See license.mkd for licensing and copyright information.
// ---------------------------------------------------------------------------

package net.multiphasicapps.squirreljme.jit;

import java.io.DataInputStream;
import java.io.InputStream;
import java.io.IOException;
import net.multiphasicapps.squirreljme.executable.ExecutableClass;

/**
 * This is the part of the JIT which accepts a class file which is parsed and
 * then recompiled to native machine code as it is being processed.
 *
 * @since 2017/04/02
 */
public final class JIT
{
	/** The magic number of the class file. */
	private static final int _MAGIC_NUMBER =
		0xCAFEBABE;
	
	/** The input class file stream. */
	protected final DataInputStream input;
	
	/** The configuration for the JIT. */
	protected final JITConfig config;
	
	/**
	 * Initializes the JIT processor.
	 *
	 * @param __is The input class file to process.
	 * @param __conf The configuration for the JIT.
	 * @throws NullPointerException On null arguments.
	 * @since 2017/04/02
	 */
	JIT(DataInputStream __is, JITConfig __conf)
		throws NullPointerException
	{
		// Check
		if (__is == null || __conf == null)
			throw new NullPointerException("NARG");
		
		// Set
		this.input = __is;
		this.config = __conf;
	}
	
	/**
	 * Runs the JIT.
	 *
	 * @return The resulting executable generated by the JIT.
	 * @throws IOException On read errors.
	 * @throws JITException If compilation failed.
	 * @since 2017/04/02
	 */
	public ExecutableClass run()
		throws IOException, JITException
	{
		DataInputStream input = this.input;
		
		// {@squirreljme.error AQ0b The magic number of the input data stream
		// does not match that of the Java class file. (The magic number which
		// was read)}
		int fail;
		if ((fail = input.readInt()) != _MAGIC_NUMBER)
			throw new JITException(String.format("AQ0b %08x", fail));
		
		// {@squirreljme.error AQ0c The version number of the input class file
		// is not valid. (The version number)}
		int cver = input.readShort() | (input.readShort() << 16);
		ClassVersion version = ClassVersion.findVersion(cver);
		if (version == null)
			throw new JITException(String.format("AQ0c %d.%d",
				cver >>> 16, (cver & 0xFFFF)));
		
		// Parse the constant pool
		__Pool__ pool = new __Pool__(input);
		
		throw new todo.TODO();
	}
}

