# 2016/08/19

## 10:21

Looks like `__ClassDecoder__` is getting a bit big since it triggers the class
size warning.

## 11:25

I can perform some basic and minor optimizations by caching some stack values
using a simple and naive means. When it comes to saving/restoring values I can
just lazily allocate a bunch of stack items for the number of local and stack
variables.

## 13:52

So what I need is a generic class output system where I can write machine code
into.

## 13:54

I suppose for simplicity that the JIT will treat the stack and locals as a
single unified set of registers. Registers can be translated to stack machines
as needed. Personally Java should have just used registers from the start
instead of using a stack machine. However, I just need an efficient stack
cacher.

