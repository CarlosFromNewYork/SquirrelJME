# 2016/06/16

## 11:06

When it comes to `VMInterface`, there can be one that exists per process and
they could communicate with each other as such.

## 11:57

The `Class.getResourceAsStream()` operates on the JAR of the specified class.
This means that I need a dummy class in classes where resources exist so
that I can read the actual resources.

## 12:23

I should have a general mascot service of sorts. All the mascots will extend
the base class however the original high resolution images would be placed in
an original class. Then this way I can have a somewhat shared means of finding
images to use. The base resource lookup class can even handle decoding the
hexadecimal data and providing a binary stream.

## 13:33

Mascot images could actually be provided with the `ServiceLoader` so that a
format as required can be specified and such. Then the instances of the service
will be in the JAR so that `getResourceAsStream` would work there.

## 14:23

Never figured that I would have refactored the mascot projects other than
resorting.

## 15:10

I kind of just want to work on MEEP for a bit.

