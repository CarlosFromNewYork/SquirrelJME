# 2016/05/15

## 00:02

So I suppose I did much stuff, wrote image downscale, dowscaled images and
such. Did some interpreter stuff, but setup an interface for the launcher.
The kernel and such at least for the JVM wrapper for now could just use the
interpreter which I have been writing. I must modify the interpreter slightly
so that it can garbage collect a bit easier. However, now that I have the
actual kernel stuff in place I can handle system calls and magical calls. This
means that I can write for the intended environment without needing to have
some kind of odd bridge. So the first kernel of course would be the one that
runs on an existing JVM. I can then go deeper and then port the kernel to
SquirrelJME and interpret on the interpreter using the line based console
interface in MEEP.

## 07:22

Hopefully today I can get a bunch of commits done similar to yesterday.
Although looking at the graph, most of my commits are on Saturday and Sunday.

## 08;43

I will need to develop a library which can consume events generated by the
kernel and then provides those interfaces to say perhaps a game. Some systems
such as the Dreamcast support multiple keyboard and mice connected to a system.
So a game for example could use that kind of support. Joysticks could also be
supported. However there is a bunch of code that varies between operating
systems and the level of support.

## 08:58

For `final` fields with known constants, the fields could just not exist or
be allocated at all. Their value never changes and it can be represented in
the byte code so to speak. However for the dynamic compiler their values
still need to be known and assigned to a specific field.

## 09:46

Some of these keys seem absurd, but you never know!

