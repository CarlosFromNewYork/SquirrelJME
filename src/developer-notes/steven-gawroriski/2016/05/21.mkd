# 2016/05/21

## 07:36

So to write the kernel IPC system so that processes may communicate to each
other.

## 10:19

I do wonder if I should have a lock on the security checks or have them within
locking regions. This way if threads or the kernel are modifying permissions
while one is being checked, it does not get messed up.

## 10:30

The KIOSocket code can use `ReferenceQueue` and `WeakReference` to make it so
the sockets can be cleared away when they are garbage collected and such.

## 10:31

This means that the socket will need a kind of data point. Although
alternatively since everything is garbage collected and managed by the JVM, I
do not have to close a socket. If a process runs out of threads (which is a
known event) then all sockets can automatically be closed and removed. So when
a process detects that no more threads are running (from the main loop) it can
perform a cleanup and close connections of other ends and such before it goes
completely away. Then I can have a flag to indicate that a process is no longer
around and all access to it throws an exception.

