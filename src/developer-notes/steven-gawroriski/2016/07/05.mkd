# 2016/07/05

## 13:09

The JITTarget can use a simplified output which is matched to operating system
packages. Instead of just say `powerpc32.linux.generic` the targets will
essentially be `powerpc-32,big.linux.generic`. However since some packages
might support some bits and others not, there would essentially be a list of
stuff rather than just having single entries.

## 17:06

I looked at my site through my mobile phone, it renders the blueish color as a
kind of grayscale. This looked quite nice, so I believe I will switch color
schemes.

## 19:38

Ok, so the `JIT` is to be completley decoupled from the `JITOutput` so the
`JIT` will be `final` and the generation logic will be placed in `JITOutput`
instead.

## 19:44

This means that the `JITOutputFactory` being associated with an operating
system and architecture in the constructor makes no sense at all.

## 19:53

Using the configuration greatly simplifies finding a supporting output
factory.

## 20:15

This means the native code generators are decoupled from the JIT which means
the JITCPUVariant does not need to exist. However, native code generators could
still be part of the output in a way. I could very literally have virtualized
`JITOutput` which either call one which generates instructions or calls another
`JITOutput`. So there would need to be some kind of back bridging of sorts.
Or the native code generators could be completely standalone as a kind of
interface which is bound to some kind of output.

## 20:17

The triplet for the Nintendo 64 would be `mips-64+iii,big.nintendo64.64drive`.

