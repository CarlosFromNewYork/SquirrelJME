# 2016/09/06

## 06:44

Actually, determining if `SUPER` becomes `VIRTUAL` has to be done at link time
since I do not know if a class is a superclass of one.

## 07:30

Invocation of methods will be handling cached stack values.

## 08:13

So I have basic stack caching right now since the `this` in a constructor call
has been cached.

## 09:02

Forgot about removing stack entries.

## 09:08

And return values.

## 09:56

So as I planned before, method linking will have a source method and a target
method, which are both method references along with their linkage type. This
would reduce the amount of space required.

