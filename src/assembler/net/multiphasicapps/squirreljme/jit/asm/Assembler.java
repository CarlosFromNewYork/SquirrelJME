// -*- Mode: Java; indent-tabs-mode: t; tab-width: 4 -*-
// ---------------------------------------------------------------------------
// Multi-Phasic Applications: SquirrelJME
//     Copyright (C) 2013-2016 Steven Gawroriski <steven@multiphasicapps.net>
//     Copyright (C) 2013-2016 Multi-Phasic Applications <multiphasicapps.net>
// ---------------------------------------------------------------------------
// SquirrelJME is under the GNU Affero General Public License v3+, or later.
// For more information see license.mkd.
// ---------------------------------------------------------------------------

package net.multiphasicapps.squirreljme.jit.asm;

/**
 * This class represents the base of the assembler which is used to ultimately
 * generate native machine code.
 *
 * The assembler is not thread safe.
 *
 * @since 2016/07/02
 */
public final class Assembler
{
	/**
	 * Initializes the assembler instance.
	 *
	 * @param __ac The configuration used for basic assembly operations.
	 * @param __aos The output stream to write to for generated bytes
	 * @throws NullPointerException On null arguments.
	 * @since 2016/07/02
	 */
	public Assembler(AssemblerConfig __ac, AssemblerOutputStream __aos)
		throws NullPointerException
	{
		// Check
		if (__ac == null || __aos == null)
			throw new NullPointerException("NARG");
		
		throw new Error("TODO");
	}
	
	/**
	 * Selects the source register to use for a given operation.
	 *
	 * @param __t The source type.
	 * @param __n The name of the source register.
	 * @throws AssemblerException If the source register is not valid.
	 * @throws IOException On write errors.
	 * @throws NullPointerException On null arguments.
	 * @since 2016/07/02
	 */
	public Assembler source(AssemblerRegisterType __t, String __n)
		throws AssemblerException, IOException, NullPointerException
	{
		// Check
		if (__t == null || __n == null)
			throw new NullPointerException("NARG");
		
		throw new Error("TODO");
	}
}

