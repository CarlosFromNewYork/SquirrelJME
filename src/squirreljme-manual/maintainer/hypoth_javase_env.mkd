# Hypothetical JavaSE Environment

A full JavaSE environment can run on Java ME with the help of a JAR recompiler.
Java ME offers basic class lookup via `Class.forName()`. When it comes to
reflection and such, all of the static information can be stored in special
classes that contain reflection information. Native libraries could be wrapped
and implemented in Java using similar means. One major issue however is that
classes which are dynamically loaded at run-time cannot be loaded by Java ME.
Thus these classes would need to be interpreted with bridges used. One
consequence of this however, is that all abstract classes will then need to
have an adapter which can translate virtual method calls into the interpreter.
These classes would have to exist for every single class. Another issue is
interfaces, some of the classes may implement interfaces. Due to the vast
number of interface and class combinations, it would take an extremely
large number of classes to have every possible combination. Thus, no class
must implement an interface for the most part but instead have an interface
supporting class. The interpreter classes would also use this supporting class.
Along with that, any `instanceof` that is performed will need to get the
class representation in the virtual environment and perform the checks there.
This environment would run at a decreased speed.

