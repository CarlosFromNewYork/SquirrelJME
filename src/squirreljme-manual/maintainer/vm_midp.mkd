# J2ME MIDP 2

The virtual machine could be backwards compiled to this Java version, then with
that a newer environment could run on it. Tricks would be required however
since versions before Java ME 8 are much more limited.

# Code Generation

Any code which targets this VM should be similar in what it does in the
actual method, except methods and such may be wrapped and there may be extra
locals for stuff such as the current thread.

# Fake `FileChannel`

`FileChannel` will have to completely be faked. J2ME lacks random access file
access and as such all access is done via `file://` URLs. Thus reading and
writing of files will have to be cached. If a file is changed (would likely
force a write on `close` or `sync`) then it has to be rewritten. If a
non-cached block of data needs to be accessed then the file must be reopened
and rescanned from the start to access that data. This means that file based
I/O will be very slow, essentially it will be like using a tape drive with a
random access file system attached to it.

# No `Reference`

There are no references, thus there will have to be a garbage collector on top
of the compiled layer to figure these things out.

# No reflection

There is no reflection in Java ME, so that means code cannot be ran in its
compiled to the JVM form. Thus, I will have to include the compiled version of
the interpreter so that any JARs that want to be executed can be used on that
instead. There would be a speed loss however.

