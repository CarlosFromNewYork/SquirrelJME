# 2016/03/20

## 00:12

Refactor is going well, things are much nicer now.

## 00:20

First day of spring also.

## 15:21

This refactored code is much simpler now and likely much faster too.

## 15:57

I believe I have a short or too long of a read somewhere.

## 16:04

Based on the dump and the values I am seeing, I am short two bytes.

## 16:07

And looking at the hex dump of the class, those missing two bytes are for
the ignored attribute, since the length is an integer and not an unsigned
short.

## 16:15

Method handles will require slightly more complex work to make them
cachable because identifiers can contain `(` and `)`. They are also not in
fixed positions. So I suppose what I will do then is have a fixed offset and
length similar to the binary name, then substring as required.

## 18:49

`sloccount` gives me `java: 13646 (100.00%)`. Also, the parsing of the block
of code will be inline so no byte arrays have to be filled by the attribute
and then parsed that way. Thus, the class parsing code will remain light and
not require too heavy allocations beyond the normal allocations. During my
pass, I can also use what is used by the method and ignore stuff that is not
used. Since the constant pool is shared with everything, some stuff might not
be needed at all for specific methods.

